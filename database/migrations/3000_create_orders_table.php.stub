<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateOrdersTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('orders', function (Blueprint $table) {
            $table->bigIncrements('id');

            $table->unsignedBigInteger('customer_id')->nullable();

            $table->string('code')->unique();

            $table->string('delivery_address_first_name')->nullable();
            $table->string('delivery_address_last_name')->nullable();
            $table->string('delivery_address_first_line')->nullable();
            $table->string('delivery_address_second_line')->nullable();
            $table->string('delivery_address_postal_code')->nullable();
            $table->string('delivery_address_city')->nullable();
            $table->string('delivery_address_region')->nullable();
            $table->string('delivery_address_country')->nullable();
            $table->boolean('delivery_address_is_a_company')->default(false);
            $table->string('delivery_address_company_name')->nullable();
            $table->string('delivery_address_email')->nullable();
            $table->string('delivery_address_phone_number')->nullable();

            $table->string('billing_address_first_name')->nullable();
            $table->string('billing_address_last_name')->nullable();
            $table->string('billing_address_first_line')->nullable();
            $table->string('billing_address_second_line')->nullable();
            $table->string('billing_address_postal_code')->nullable();
            $table->string('billing_address_city')->nullable();
            $table->string('billing_address_region')->nullable();
            $table->string('billing_address_country')->nullable();
            $table->string('billing_company_name')->nullable();
            $table->string('billing_cif')->nullable();
            $table->string('billing_phone_number')->nullable();

//            $table->string('status');

            $table->timestamps();
            $table->softDeletes();

            $table->foreign('customer_id')->references('id')->on('customers')->onDelete('no action')->onUpdate('no action');
        });

        Schema::create('order_lines', function (Blueprint $table) {
            $table->bigIncrements('id');

            $table->unsignedBigInteger('order_id');

            $table->integer('quantity')->default(1);
//
            $table->decimal('unit_price')->nullable();
//            $table->decimal('total_base_price');
//            $table->decimal('shipping_price')->default(0.00);
//            $table->decimal('tax_decimal')->default(0.00);
//            $table->decimal('tax_amount')->default(0.00);
//            $table->decimal('total_price_without_taxes');
            $table->decimal('total_price')->nullable();
//            $table->string('currency_code');

            $table->timestamps();
            $table->softDeletes();

            $table->foreign('order_id')->references('id')->on('orders')->onDelete('no action')->onUpdate('no action');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('order_lines');
        Schema::dropIfExists('orders');
    }
}
